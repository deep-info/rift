Function: aa
   language: c
   range: ((0, 0), (2, 1))
   substring: (0, 24)
   return_type: int
Function: foo
   language: c
   range: ((4, 0), (6, 1))
   substring: (52, 84)
   parameters: [x:int**]
   return_type: int*
   docstring: /** This is a docstring */
Function: bb
   language: c
   range: ((8, 0), (10, 1))
   substring: (86, 110)
   return_type: int
Function: main
   language: c
   range: ((12, 0), (17, 1))
   substring: (112, 169)
   return_type: int
Function: f1
   language: javascript
   range: ((1, 0), (1, 27))
   substring: (22, 49)
   docstring: /** Some docstring */
Function: f2
   language: javascript
   range: ((3, 0), (3, 18))
   substring: (93, 111)
   docstring: /** Some docstring on an arrow function */
Function: ts
   language: typescript
   range: ((1, 0), (1, 56))
   substring: (25, 81)
   parameters: [x:number, opt?:string]
   return_type: number
Function: ts2
   language: typescript
   range: ((2, 0), (2, 44))
   substring: (82, 126)
   return_type: array<number>
Function: tsx
   language: tsx
   range: ((1, 0), (1, 27))
   substring: (23, 50)
Function: py
   language: python
   range: ((1, 4), (3, 16))
   substring: (13, 77)
   parameters: [x, y]
   scope: ['A']
   docstring: """This is a docstring"""
Function: insert_code
   language: python
   range: ((6, 4), (9, 12))
   substring: (111, 249)
   parameters: [self, document:str, cursor_offset:int]
   return_type: InsertCodeResult
   scope: ['B']
Function: load
   language: python
   range: ((10, 4), (11, 12))
   substring: (254, 291)
   parameters: [self, v]
   scope: ['B']
Function: nested
   language: python
   range: ((13, 8), (14, 16))
   substring: (318, 348)
   scope: ['B', 'Nested']